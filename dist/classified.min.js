var $break={};module('Enumerable',function(){var f=function(a){return a};def('each',function(b,c){var d=0;try{this.__each__(function(a){b.call(c,a,d++)})}catch(error){if(error!=$break){throw error;}}return this});def('all',function(c,d){c=c||f;var e=true;this.each(function(a,b){e=e&&!!c.call(d,a,b);if(!e){throw $break;}});return e});alias('every','all');def('any',function(c,d){c=c||f;var e=false;this.each(function(a,b){if(e=!!c.call(d,a,b)){throw $break;}});return e});alias('some','any');def('collect',function(d,e){d=d||f;return this.inject([],function(a,b,c){a.push(d.call(e,b,c));return a})});alias('map','collect');def('detect',function(c,d){var e=null;this.each(function(a,b){if(c.call(d,a,b)){e=a;throw $break;}});return e});alias('find','detect');def('include',function(b){if(typeof this.indexOf==='function'){return this.indexOf(b)!=-1}var c=false;this.each(function(a){if(typeof a.value!=='undefined'){a=a.value}if(a==b){c=true;throw $break;}});return c});def('inject',function(c,d,e){this.each(function(a,b){c=d.call(e,c,a,b)});return c});alias('reduce','inject');def('reject',function(d,e){return this.inject([],function(a,b,c){if(!d.call(e,b,c)){a.push(b)}return a})});alias('not','reject');def('select',function(d,e){return this.inject([],function(a,b,c){if(d.call(e,b,c)){a.push(b)}return a})});alias('findAll','select');alias('filter','select')});classify(Array,function(){include(Enumerable);def('__each__',function(a){for(var b=0,c=this.length;b<c;b++){a.call(null,this[b])}});if(typeof Array.prototype.indexOf==='undefined'){def('indexOf',function(a){for(var b=0,c=this.length;b<c;b++){if(this[b]===a){return b}}return-1})}if(typeof Array.prototype.lastIndexOf==='undefined'){def('lastIndexOf',function(a){var b=this.length;while(b--){if(this[b]===a){return b}}return-1})}def('clear',function(){this.length=0;return this});def('first',function(){return this[0]});def('last',function(){return this[this.length-1]});def('compact',function(){return this.reject(function(a){return a==null})});def('uniq',function(d){return this.inject([],function(a,b,c){if(c===0||(d?a.last()!=b:!a.include(b))){a.push(b)}return a})})});classify(Function,function(){def('bind',function(a){if(a==null){return this}var b=this;return function(){return b.apply(a,arguments)}})});classify(Number,function(){def('abs',function(){return Math.abs(this)});def('ceil',function(){return Math.ceil(this)});def('floor',function(){return Math.floor(this)});def('round',function(){return Math.round(this)})});extend(Object,function(){def('extend',function(a,b){for(var c in b){a[c]=b[c]}return a})});classify(RegExp,function(){def(this,'escape',function(a){return String(a).replace(/([.*+?^=!:${}()|[\]\/\\])/g,'\\$1')})});classify(String,function(){def('endsWith',function(a){var b=this.length-a.length;return b>=0&&this.indexOf(a,b)===b});def('include',function(a){return this.indexOf(a)>-1});def('isBlank',function(){return/^\s*$/.test(this)});def('isEmpty',function(){return this==''});def('startsWith',function(a){return this.lastIndexOf(a,0)===0});def('strip',function(){return this.replace(/^\s+/,'').replace(/\s+$/,'')});def('camelize',function(){return this.replace(/[-_]+(.)?/g,function(a,b){return b?b.toUpperCase():''})});def('capitalize',function(){return this.charAt(0).toUpperCase()+this.substring(1).toLowerCase()});def('dasherize',function(){return this.replace(/([A-Z]+)([A-Z][a-z])/g,'$1-$2').replace(/([a-z\d])([A-Z])/g,'$1-$2').replace(/_/g,'-').toLowerCase()});def('humanize',function(){return this.replace(/[_|-]+/g,' ').capitalize()});def('titleize',function(){return this.underscore().humanize().replace(/\b('?[a-z])/g,function(a,b){return b.capitalize()})});alias('toTitleCase','titleize');def('underscore',function(){return this.replace(/([A-Z]+)([A-Z][a-z])/g,'$1_$2').replace(/([a-z\d])([A-Z])/g,'$1_$2').replace(/-/g,'_').toLowerCase()})});classify('Hash',function(){include(Enumerable);def('initialize',function(a){this.update(a)});def('__each__',function(a){for(var b in this){if(this.hasOwnProperty(b)){var c=this[b];var d=[b,c];d.key=b;d.value=c;a.call(null,d)}}});def('keys',function(){return this.collect(function(a){return a.key})});def('merge',function(a){return new Hash(this).update(a)});def('reverseMerge',function(a){return new Hash(a).update(this)});def('update',function(b){if(b instanceof Hash){b.each(function(a){this[a.key]=a.value},this)}else{Object.extend(this,b)}return this});def('values',function(){return this.collect(function(a){return a.value})})});def('$H',function(a){return new Hash(a)});